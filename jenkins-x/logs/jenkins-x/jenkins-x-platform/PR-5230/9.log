Step: build-step-credential-initializer-8x9v2:

{"level":"warn","ts":1554909988.7109277,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/backport-container-name-fix\" is not a valid GitHub commit ID"}
{"level":"info","ts":1554909988.711875,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-git-source-jenkins-x-jenkins-x-platform-pr-wbh**:

{"level":"warn","ts":1554909990.3246286,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/backport-container-name-fix\" is not a valid GitHub commit ID"}
{"level":"info","ts":1554909992.5008645,"logger":"fallback-logger","caller":"git-init/main.go:99","msg":"Successfully cloned \"https://github.com/jenkins-x/jenkins-x-platform\" @ \"a443417255726b20320221214a921aebe192be40\" in path \"/workspace/source\""}
Step: build-step-place-tools:

Step: build-step-git-merge:

Warning failed to load version: failed to parse version -dev+548a93a-dev+981c48321: No Major.Minor.Patch elements found
Using SHAs from PULL_REFS=master:c802d3a15e1b27341e20b5b4d0b3b3bb3d60c864,5230:a443417255726b20320221214a921aebe192be40
ran git fetch --unshallow origin a443417255726b20320221214a921aebe192be40: c802d3a15e1b27341e20b5b4d0b3b3bb3d60c864: in 
ran git checkout master in 
ran git reset --hard c802d3a15e1b27341e20b5b4d0b3b3bb3d60c864 in 
ran clean --force -d . in 
ran git merge a443417255726b20320221214a921aebe192be40 in 
Step: build-step-step2:

cat: /builder/home/basic-auth-user.json: No such file or directory
cat: /builder/home/basic-auth-pass.json: No such file or directory
helm init --client-only
Creating /builder/home/.helm 
Creating /builder/home/.helm/repository 
Creating /builder/home/.helm/repository/cache 
Creating /builder/home/.helm/repository/local 
Creating /builder/home/.helm/plugins 
Creating /builder/home/.helm/starters 
Creating /builder/home/.helm/cache/archive 
Creating /builder/home/.helm/repository/repositories.yaml 
Adding stable repo with URL: https://kubernetes-charts.storage.googleapis.com 
Adding local repo with URL: http://127.0.0.1:8879/charts 
$HELM_HOME has been configured at /builder/home/.helm.
Not installing Tiller due to 'client-only' flag having been set
Happy Helming!
helm repo add ** http://chartmuseum.jenkins-x.io
"**" has been added to your repositories
helm repo add incubator https://kubernetes-charts-incubator.storage.googleapis.com
"incubator" has been added to your repositories
helm repo add stable https://kubernetes-charts.storage.googleapis.com
"stable" has been added to your repositories
helm repo add monocular https://helm.github.io/monocular
"monocular" has been added to your repositories
rm -rf jenkins-x-platform/charts
rm -rf jenkins-x-platform/jenkins-x*.tgz
rm -rf jenkins-x-platform/requirements.lock
helm dependency build jenkins-x-platform
Hang tight while we grab the latest from your chart repositories...
...Unable to get an update from the "local" chart repository (http://127.0.0.1:8879/charts):
	Get http://127.0.0.1:8879/charts/index.yaml: dial tcp 127.0.0.1:8879: connect: connection refused
...Successfully got an update from the "monocular" chart repository
...Successfully got an update from the "incubator" chart repository
...Successfully got an update from the "**" chart repository
...Successfully got an update from the "stable" chart repository
Update Complete. ⎈Happy Helming!⎈
Saving 17 charts
Downloading jenkins from repo http://chartmuseum.jenkins-x.io
Downloading exposecontroller from repo http://chartmuseum.jenkins-x.io
Downloading exposecontroller from repo http://chartmuseum.jenkins-x.io
Downloading chartmuseum from repo http://chartmuseum.jenkins-x.io
Downloading nexus from repo http://chartmuseum.jenkins-x.io
Downloading heapster from repo https://kubernetes-charts.storage.googleapis.com
Downloading monocular from repo http://chartmuseum.jenkins-x.io
Downloading docker-registry from repo https://kubernetes-charts.storage.googleapis.com
Downloading ** from repo http://chartmuseum.jenkins-x.io
Downloading ** from repo http://chartmuseum.jenkins-x.io
Downloading ** from repo http://chartmuseum.jenkins-x.io
Downloading ** from repo http://chartmuseum.jenkins-x.io
Downloading ** from repo http://chartmuseum.jenkins-x.io
Downloading ** from repo http://chartmuseum.jenkins-x.io
Downloading ** from repo http://chartmuseum.jenkins-x.io
Downloading ** from repo http://chartmuseum.jenkins-x.io
Downloading ** from repo http://chartmuseum.jenkins-x.io
Deleting outdated charts
helm lint jenkins-x-platform
==> Linting jenkins-x-platform
Lint OK

1 chart(s) linted, no failures
Step: build-step-step3:

---
# Source: jenkins-x-platform/charts/chartmuseum/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-chartmuseum
  labels:
    app: chartmuseum
    chart: chartmuseum-1.1.4
    heritage: "Tiller"
    release: "release-name"
type: Opaque
data:
  BASIC_AUTH_PASS: YWRtaW4=
  BASIC_AUTH_USER: YWRtaW4=

---
# Source: jenkins-x-platform/charts/docker-registry/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-docker-registry-secret
  labels:
    app: docker-registry
    chart: docker-registry-1.5.0
    heritage: Tiller
    release: release-name
type: Opaque
data:
  haSharedSecret: "Z1gybVRINW1OTmU2ZVJ5dQ=="

---
# Source: jenkins-x-platform/charts/jenkins/templates/secret.yaml

apiVersion: v1
kind: Secret
metadata:
  name: jenkins
  labels:
    app: jenkins
    chart: "jenkins-0.10.32"
    release: "release-name"
    heritage: "Tiller"
type: Opaque
data:
  
  jenkins-*****-password: "YWRtaW4="
  
  jenkins-*****-user: "YWRtaW4="
---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mongodb
  labels:
    app: mongodb
    chart: mongodb-4.0.4
    release: "release-name"
    heritage: "Tiller"
type: Opaque
data:
  mongodb-root-password: "VFRTWFVVM2FvTA=="

---
# Source: jenkins-x-platform/charts/nexus/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: nexus
  labels:
    app: release-name-nexus
    chart: "nexus-0.1.7"
    release: "release-name"
    heritage: "Tiller"
type: Opaque
data:  
  password: "YWRtaW4xMjM="

---
# Source: jenkins-x-platform/templates/docker-cfg-secret.yaml

apiVersion: v1
kind: Secret
metadata:
  name: jenkins-docker-cfg
type: Opaque
data:
  config.json: "e30="

---
# Source: jenkins-x-platform/templates/**-basic-auth-secret.yaml
apiVersion: v1
data:
  auth: "YWRtaW46JGFwcjEkYS9IZFRyVjckWFlDR0pXRjlQZFZ3VlZUdmpNeWFVLw=="
kind: Secret
metadata:
  name: **-basic-auth
type: Opaque
---
# Source: jenkins-x-platform/templates/maven-settings-secret.yaml
apiVersion: v1
data:
  settings.xml: "PHNldHRpbmdzPgogICAgPCEtLSBzZXRzIHRoZSBsb2NhbCBtYXZlbiByZXBvc2l0b3J5IG91dHNpZGUgb2YgdGhlIH4vLm0yIGZvbGRlciBmb3IgZWFzaWVyIG1vdW50aW5nIG9mIHNlY3JldHMgYW5kIHJlcG8gLS0+CiAgICA8bG9jYWxSZXBvc2l0b3J5PiR7dXNlci5ob21lfS8ubXZucmVwb3NpdG9yeTwvbG9jYWxSZXBvc2l0b3J5PgogICAgPCEtLSBsZXRzIGRpc2FibGUgdGhlIGRvd25sb2FkIHByb2dyZXNzIGluZGljYXRvciB0aGF0IGZpbGxzIHVwIGxvZ3MgLS0+CiAgICA8aW50ZXJhY3RpdmVNb2RlPmZhbHNlPC9pbnRlcmFjdGl2ZU1vZGU+CiAgICA8bWlycm9ycz4KICAgICAgICA8bWlycm9yPgogICAgICAgIDxpZD5uZXh1czwvaWQ+CiAgICAgICAgPG1pcnJvck9mPmV4dGVybmFsOio8L21pcnJvck9mPgogICAgICAgIDx1cmw+aHR0cDovL25leHVzOjgwODEvcmVwb3NpdG9yeS9tYXZlbi1ncm91cC88L3VybD4KICAgICAgICA8L21pcnJvcj4KICAgIDwvbWlycm9ycz4KICAgIDxzZXJ2ZXJzPgogICAgICAgIDxzZXJ2ZXI+CiAgICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgICA8dXNlcm5hbWU+YWRtaW48L3VzZXJuYW1lPgogICAgICAgIDxwYXNzd29yZD5hZG1pbjEyMzwvcGFzc3dvcmQ+CiAgICA8L3NlcnZlcj4KICAgIDxzZXJ2ZXI+CiAgICAgICAgPGlkPm9zcy1zb25hdHlwZS1zdGFnaW5nPC9pZD4KICAgICAgICA8dXNlcm5hbWU+PC91c2VybmFtZT4KICAgICAgICA8cGFzc3dvcmQ+PC9wYXNzd29yZD4KICAgICAgICA8L3NlcnZlcj4KICAgIDwvc2VydmVycz4KICAgIDxwcm9maWxlcz4KICAgICAgICA8cHJvZmlsZT4KICAgICAgICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgICAgICAgICA8YWx0RGVwbG95bWVudFJlcG9zaXRvcnk+bmV4dXM6OmRlZmF1bHQ6Omh0dHA6Ly9uZXh1cy9yZXBvc2l0b3J5L21hdmVuLXNuYXBzaG90cy88L2FsdERlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgICAgICAgICAgPGFsdFJlbGVhc2VEZXBsb3ltZW50UmVwb3NpdG9yeT5uZXh1czo6ZGVmYXVsdDo6aHR0cDovL25leHVzL3JlcG9zaXRvcnkvbWF2ZW4tcmVsZWFzZXMvPC9hbHRSZWxlYXNlRGVwbG95bWVudFJlcG9zaXRvcnk+CiAgICAgICAgICAgICAgICA8YWx0U25hcHNob3REZXBsb3ltZW50UmVwb3NpdG9yeT5uZXh1czo6ZGVmYXVsdDo6aHR0cDovL25leHVzL3JlcG9zaXRvcnkvbWF2ZW4tc25hcHNob3RzLzwvYWx0U25hcHNob3REZXBsb3ltZW50UmVwb3NpdG9yeT4KICAgICAgICAgICAgPC9wcm9wZXJ0aWVzPgogICAgICAgIDwvcHJvZmlsZT4KICAgICAgICA8cHJvZmlsZT4KICAgICAgICAgICAgPGlkPnJlbGVhc2U8L2lkPgogICAgICAgICAgICA8cHJvcGVydGllcz4KICAgICAgICAgICAgICAgIDxncGcuZXhlY3V0YWJsZT5ncGc8L2dwZy5leGVjdXRhYmxlPgogICAgICAgICAgICAgICAgPGdwZy5wYXNzcGhyYXNlPm15c2VjcmV0cGFzc3BocmFzZTwvZ3BnLnBhc3NwaHJhc2U+CiAgICAgICAgICAgIDwvcHJvcGVydGllcz4KICAgICAgICA8L3Byb2ZpbGU+CiAgICA8L3Byb2ZpbGVzPgogICAgPGFjdGl2ZVByb2ZpbGVzPgogICAgICAgIDwhLS1tYWtlIHRoZSBwcm9maWxlIGFjdGl2ZSBhbGwgdGhlIHRpbWUgLS0+CiAgICAgICAgPGFjdGl2ZVByb2ZpbGU+bmV4dXM8L2FjdGl2ZVByb2ZpbGU+CiAgICA8L2FjdGl2ZVByb2ZpbGVzPgo8L3NldHRpbmdzPg=="
kind: Secret
metadata:
  name: jenkins-maven-settings
type: Opaque
---
# Source: jenkins-x-platform/templates/npm-token-secret.yaml
apiVersion: v1
data:
  token: ""
kind: Secret
metadata:
  name: jenkins-npm-token
type: Opaque
---
# Source: jenkins-x-platform/templates/release-gpg-secret.yaml
apiVersion: v1
data:
  pubring.gpg: ""
  sec-jenkins.gpg: ""
  secring.gpg: ""
  trustdb.gpg: ""
kind: Secret
metadata:
  name: jenkins-release-gpg
type: Opaque
---
# Source: jenkins-x-platform/templates/ssh-config-secret.yaml
apiVersion: v1
data:
  .config: "SG9zdCBnaXRodWIuY29tCiAgICBVc2VyIGdpdAogICAgSWRlbnRpdHlGaWxlIC9yb290Ly5zc2gtZ2l0L3NzaC1rZXkKICAgIFN0cmljdEhvc3RLZXlDaGVja2luZyBubw=="
kind: Secret
metadata:
  name: jenkins-ssh-config
type: Opaque
---
# Source: jenkins-x-platform/charts/docker-registry/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-docker-registry-config
  labels:
    app: docker-registry
    chart: docker-registry-1.5.0
    heritage: Tiller
    release: release-name
data:
  config.yml: |-
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    http:
      addr: :5000
      headers:
        X-Content-Type-Options:
        - nosniff
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
    version: 0.1
    

---
# Source: jenkins-x-platform/charts/jenkins/templates/config.yaml


apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins
data:
  config.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <hudson>
      <disabledAdministrativeMonitors/>
      <version>0.0.53</version>
      <numExecutors>0</numExecutors>
      <mode>NORMAL</mode>
      <useSecurity>true</useSecurity>
      <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
          <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
      </authorizationStrategy>
      <securityRealm class="hudson.security.LegacySecurityRealm">
      </securityRealm>
      <disableRememberMe>false</disableRememberMe>
      <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
      <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULLNAME}</workspaceDir>
      <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
      <markupFormatter class="hudson.markup.EscapedMarkupFormatter"/>
      <jdks/>
      <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
      <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
      <clouds>
        <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin="kubernetes@0.11">
          <name>kubernetes</name>
          <templates>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>dlang</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-dlang</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>dlang</name>
                  <image>gcr.io/jenkinsxio/builder-dlang:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>500m</resourceRequestCpu>
                  <resourceRequestMemory>1024Mi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>2048Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>go</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-go</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>go</name>
                  <image>gcr.io/jenkinsxio/builder-go:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>600Mi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>1448Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>gradle</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-gradle</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.gnupg</mountPath>
                  <secretName>jenkins-release-gpg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>gradle</name>
                  <image>gcr.io/jenkinsxio/builder-gradle:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>1024Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>_JAVA_OPTIONS</key>
                  <value>-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>**-base</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-**-base</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>**-base</name>
                  <image>gcr.io/jenkinsxio/builder-**:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>200m</resourceRequestCpu>
                  <resourceRequestMemory>256Mi</resourceRequestMemory>
                  <resourceLimitCpu>400m</resourceLimitCpu>
                  <resourceLimitMemory>512Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>maven</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-maven</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/root/.m2/</mountPath>
                  <secretName>jenkins-maven-settings</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.gnupg</mountPath>
                  <secretName>jenkins-release-gpg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>maven</name>
                  <image>gcr.io/jenkinsxio/builder-maven:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>1024Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>MAVEN_OPTS</key>
                  <value>-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>_JAVA_OPTIONS</key>
                  <value>-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>maven-java11</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-maven-java11</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/root/.m2/</mountPath>
                  <secretName>jenkins-maven-settings</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.gnupg</mountPath>
                  <secretName>jenkins-release-gpg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>maven</name>
                  <image>gcr.io/jenkinsxio/builder-maven-java11:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>1024Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>MAVEN_OPTS</key>
                  <value>-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>_JAVA_OPTIONS</key>
                  <value>-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>maven-nodejs</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-maven-nodejs</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/root/.m2/</mountPath>
                  <secretName>jenkins-maven-settings</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.gnupg</mountPath>
                  <secretName>jenkins-release-gpg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>mavennodejs</name>
                  <image>gcr.io/jenkinsxio/builder-maven-nodejs:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>2</resourceLimitCpu>
                  <resourceLimitMemory>2048Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>_JAVA_OPTIONS</key>
                  <value>-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>newman</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-newman</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>newman</name>
                  <image>gcr.io/jenkinsxio/builder-newman:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>1024Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>nodejs</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-nodejs</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>nodejs</name>
                  <image>gcr.io/jenkinsxio/builder-nodejs:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>2</resourceLimitCpu>
                  <resourceLimitMemory>2048Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>promote</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-promote</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>promote</name>
                  <image>gcr.io/jenkinsxio/builder-**:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>200m</resourceRequestCpu>
                  <resourceRequestMemory>100Mi</resourceRequestMemory>
                  <resourceLimitCpu>400m</resourceLimitCpu>
                  <resourceLimitMemory>200Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>python</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-python</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>python</name>
                  <image>gcr.io/jenkinsxio/builder-python:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>2</resourceLimitCpu>
                  <resourceLimitMemory>2048Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>python2</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-python2</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>python</name>
                  <image>gcr.io/jenkinsxio/builder-python2:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>2</resourceLimitCpu>
                  <resourceLimitMemory>2048Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>python37</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-python37</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>python</name>
                  <image>gcr.io/jenkinsxio/builder-python37:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>2</resourceLimitCpu>
                  <resourceLimitMemory>2048Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>ruby</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-ruby</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>ruby</name>
                  <image>gcr.io/jenkinsxio/builder-ruby:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>2</resourceLimitCpu>
                  <resourceLimitMemory>2048Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>rust</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-rust</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>rust</name>
                  <image>gcr.io/jenkinsxio/builder-rust:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>1024Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>scala</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-scala</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/root/.m2/</mountPath>
                  <secretName>jenkins-maven-settings</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.gnupg</mountPath>
                  <secretName>jenkins-release-gpg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>scala</name>
                  <image>gcr.io/jenkinsxio/builder-scala:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>1024Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>_JAVA_OPTIONS</key>
                  <value>-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>swift</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-swift</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>swift</name>
                  <image>gcr.io/jenkinsxio/builder-swift:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>2</resourceLimitCpu>
                  <resourceLimitMemory>2048Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>terraform</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-terraform</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>terraform</name>
                  <image>gcr.io/jenkinsxio/builder-terraform:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>600Mi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>1448Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>aws-cdk</name>
              <serviceAccount>jenkins</serviceAccount>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>jenkins-aws-cdk</label>
              <nodeSelector></nodeSelector>
              <volumes>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                  <hostPath>/var/run/docker.sock</hostPath>
                  <mountPath>/var/run/docker.sock</mountPath>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/root/.m2/</mountPath>
                  <secretName>jenkins-maven-settings</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.docker</mountPath>
                  <secretName>jenkins-docker-cfg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                <org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
                  <mountPath>/home/jenkins/.gnupg</mountPath>
                  <secretName>jenkins-release-gpg</secretName>
                </org.csanchez.jenkins.plugins.kubernetes.volumes.SecretVolume>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave:3.26-1-alpine</image>
                  <privileged>false</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>100m</resourceRequestCpu>
                  <resourceRequestMemory>128Mi</resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>aws-cdk</name>
                  <image>gcr.io/jenkinsxio/builder-maven-nodejs:0.1.398</image>
                  <privileged>true</privileged>
                  <alwaysPullImage></alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command>/bin/sh -c</command>
                  <args>cat</args>
                  <ttyEnabled>true</ttyEnabled>
                  <resourceRequestCpu>400m</resourceRequestCpu>
                  <resourceRequestMemory>512Mi</resourceRequestMemory>
                  <resourceLimitCpu>2</resourceLimitCpu>
                  <resourceLimitMemory>2048Mi</resourceLimitMemory>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>DOCKER_CONFIG</key>
                  <value>/home/jenkins/.docker/</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_AUTHOR_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_EMAIL</key>
                  <value>jenkins-x@googlegroups.com</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>GIT_COMMITTER_NAME</key>
                  <value>*************</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>JENKINS_URL</key>
                  <value>http://jenkins:8080</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>XDG_CONFIG_HOME</key>
                  <value>/home/jenkins</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  <key>_JAVA_OPTIONS</key>
                  <value>-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx512m</value>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate></templates>
          <serverUrl>https://kubernetes.default</serverUrl>
          <skipTlsVerify>false</skipTlsVerify>
          <namespace>**</namespace>
          <jenkinsUrl>http://jenkins:8080</jenkinsUrl>
          <jenkinsTunnel>jenkins-agent:50000</jenkinsTunnel>
          <containerCap>0</containerCap>
          <retentionTimeout>5</retentionTimeout>
          <connectTimeout>0</connectTimeout>
          <readTimeout>0</readTimeout>
        </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>
      </clouds>
      <quietPeriod>5</quietPeriod>
      <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
      <views>
        <hudson.model.AllView>
          <owner class="hudson" reference="../../.."/>
          <name>All</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
        </hudson.model.AllView>
      </views>
      <primaryView>All</primaryView>
      <slaveAgentPort>50000</slaveAgentPort>
      <label></label>
      <nodeProperties/>
      <globalNodeProperties>
        <hudson.slaves.EnvironmentVariablesNodeProperty>
          <envVars serialization="custom">
            <unserializable-parents/>
            <tree-map>
              <default>
                <comparator class="hudson.util.CaseInsensitiveComparator"/>
              </default>
              <int>2</int>
              <string>DOCKER_REGISTRY</string>
              <string></string>
              <string>TILLER_NAMESPACE</string>
              <string></string>
            </tree-map>
          </envVars>
        </hudson.slaves.EnvironmentVariablesNodeProperty>
      </globalNodeProperties>
      <noUsageStatistics>true</noUsageStatistics>
    </hudson>
  org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <org.jenkinsci.plugins.github__branch__source.GitHubConfiguration plugin="github-branch-source@2.3.2">
      <endpoints>
      </endpoints>
    </org.jenkinsci.plugins.github__branch__source.GitHubConfiguration>
  com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig plugin="gitlab-plugin@1.5.5">
      <useAuthenticatedEndpoint>true</useAuthenticatedEndpoint>
      <connections>
      </connections>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig>
  com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration plugin="cloudbees-bitbucket-branch-source@2.2.10">
      <endpoints>
      </endpoints>
    </com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration>
  org.jenkinsci.plugin.gitea.servers.GiteaServers.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <org.jenkinsci.plugin.gitea.servers.GiteaServers plugin="gitea@1.0.5">
      <servers>
      </servers>
    </org.jenkinsci.plugin.gitea.servers.GiteaServers>
  apply_config.sh: |-
    rm -rf /var/jenkins_home/plugins
    mkdir -p /usr/share/jenkins/ref/secrets/;
    echo "false" > /usr/share/jenkins/ref/secrets/slave-to-master-security-kill-switch;
    rm -rf /var/jenkins_home/config.xml
    ln -s /var/jenkins_config/config.xml /var/jenkins_home/config.xml
    rm -rf /var/jenkins_home/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml
    ln -s /var/jenkins_config/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml /var/jenkins_home/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml
    rm -rf /var/jenkins_home/org.jenkinsci.plugin.gitea.servers.GiteaServers.xml
    ln -s /var/jenkins_config/org.jenkinsci.plugin.gitea.servers.GiteaServers.xml /var/jenkins_home/org.jenkinsci.plugin.gitea.servers.GiteaServers.xml
    rm -rf /var/jenkins_home/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml
    ln -s /var/jenkins_config/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml /var/jenkins_home/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml
    rm -rf /var/jenkins_home/org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml
    ln -s /var/jenkins_config/org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml /var/jenkins_home/org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml
  plugins.txt: |-
---
# Source: jenkins-x-platform/charts/jenkins/templates/jenkins-x-git-kinds-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-git-kinds"
data:
  github: |-
  gitea: |-

---
# Source: jenkins-x-platform/charts/jenkins/templates/test-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-tests
data:
  run.sh: |-
    @test "Testing Jenkins UI is accessible" {
      curl --retry 12 --retry-delay 10 jenkins:8080/login
    }

---
# Source: jenkins-x-platform/charts/monocular/templates/api-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-monocular-api-config
  labels:
    app: release-name-monocular
    chart: "monocular-0.6.4"
    release: "release-name"
    heritage: "Tiller"
data:
  monocular.yaml: |-
    mongodb:
      url: release-name-mongodb:27017
      database: monocular
    cacheRefreshInterval: 30
    cors:
      allowed_headers:
      - content-type
      - x-xsrf-token
      allowed_origins:
      - ""
    releasesEnabled: false
    repos:
    - name: chartmuseum
      source: https://github.com/jenkins-x/jenkins-x-platform
      url: http://jenkins-x-chartmuseum:8080
    tillerNamespace: kube-system
    
---
# Source: jenkins-x-platform/charts/monocular/templates/ui-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-monocular-ui-config
  labels:
    app: release-name-monocular
    chart: "monocular-0.6.4"
    release: "release-name"
    heritage: "Tiller"
data:
  overrides.js: |-
    window.monocular = {
      overrides: {
        googleAnalyticsId: 'UA-XXXXXX-X',
        appName: 'Jenkins X Apps',
        backendHostname: '/api',
        releasesEnabled: false
      }
    };

---
# Source: jenkins-x-platform/charts/monocular/templates/ui-vhost.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-monocular-ui-vhost
  labels:
    app: release-name-monocular
    chart: "monocular-0.6.4"
    release: "release-name"
    heritage: "Tiller"
data:
  vhost.conf: |+
    upstream target_service {
      server release-name-monocular-prerender;
    }

    server {
      listen 8080;

      gzip on;
      # Angular CLI already has gzipped the assets (ng build --prod --aot)
      gzip_static  on;

      location / {
        try_files $uri @prerender;
      }

      location @prerender {
        set $prerender 0;

        if ($http_user_agent ~* "baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
          set $prerender 1;
        }

        if ($args ~ "_escaped_fragment_") {
          set $prerender 1;
        }

        if ($http_user_agent ~ "Prerender") {
          set $prerender 0;
        }

        if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
          set $prerender 0;
        }

        if ($prerender = 1) {
          rewrite .* /https://$host$request_uri? break;
          proxy_pass http://target_service;
        }
        if ($prerender = 0) {
          rewrite .* /index.html break;
        }
      }
    }

    # Redirect www to non-www
    # Taken from https://easyengine.io/tutorials/nginx/www-non-www-redirection/
    server {
      server_name "~^www\.(.*)$" ;
      return 301 $scheme://$1$request_uri ;
    }

---
# Source: jenkins-x-platform/charts/nexus/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nexus
  annotations:
    expose.config.fabric8.io/path-key: context.path
data:
  context.path: /

---
# Source: jenkins-x-platform/templates/controller-team-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-team-controller"
data:
  myvalues.yaml: |-
    # disable stuff
    controllerteam:
      enabled: false
    pipelinecontroller:
      enabled: false
    monocular:
      enabled: false

    # service link nexus
    nexus:
      enabled: false
    nexusServiceLink:
      enabled: true
      externalName: "nexus.**.svc.cluster.local"

    # service link chartmuseum
    chartmuseum:
      enabled: false
    chartmuseumServiceLink:
      enabled: true
      externalName: "jenkins-x-chartmuseum.**.svc.cluster.local"
---
# Source: jenkins-x-platform/templates/jenkins-x-devpod-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-devpod-config"
data:
  versions: |-
    theia: 0.3.14

---
# Source: jenkins-x-platform/templates/jenkins-x-docker-registry.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-x-docker-registry
  annotations:
    expose.config.fabric8.io/clusterip-port-if-empty-key: docker.registry
data:
  docker.registry: 
---
# Source: jenkins-x-platform/templates/jenkins-x-extensions-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-extensions"
data:  
  knownRepositories: |
    repositories:
    - chart: {}
      github: jenkins-x/jenkins-x-extensions
  repository: |
    chart: {}
    github: jenkins-x/jenkins-x-extensions
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-templates"
data:
  dlang: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-dlang
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: dlang
        image: gcr.io/jenkinsxio/builder-dlang:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 500m
            memory: 1024Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  go: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-go
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 2345, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: go
        image: gcr.io/jenkinsxio/builder-go:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 600Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  gradle: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-gradle
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-1
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: gradle
        image: gcr.io/jenkinsxio/builder-gradle:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
          - name: volume-1
            mountPath: /home/jenkins/.gnupg
  **-base: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-**-base
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: **-base
        image: gcr.io/jenkinsxio/builder-**:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  maven: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-maven
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: maven
        image: gcr.io/jenkinsxio/builder-maven:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: MAVEN_OPTS
          value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
  maven-java11: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-maven-java11
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: maven
        image: gcr.io/jenkinsxio/builder-maven-java11:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: MAVEN_OPTS
          value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
  maven-nodejs: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-maven-nodejs
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080, 5005
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: mavennodejs
        image: gcr.io/jenkinsxio/builder-maven-nodejs:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
  newman: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-newman
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: newman
        image: gcr.io/jenkinsxio/builder-newman:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  nodejs: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-nodejs
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: nodejs
        image: gcr.io/jenkinsxio/builder-nodejs:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  promote: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-promote
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: promote
        image: gcr.io/jenkinsxio/builder-**:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 200m
            memory: 100Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  python: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-python
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 3000, 8000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: python
        image: gcr.io/jenkinsxio/builder-python:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  python2: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-python2
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 3000, 8000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: python
        image: gcr.io/jenkinsxio/builder-python2:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  python37: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-python37
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 3000, 8000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: python
        image: gcr.io/jenkinsxio/builder-python37:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  ruby: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-ruby
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 1234, 3000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: ruby
        image: gcr.io/jenkinsxio/builder-ruby:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  rust: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-rust
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: rust
        image: gcr.io/jenkinsxio/builder-rust:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  scala: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-scala
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: scala
        image: gcr.io/jenkinsxio/builder-scala:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
  swift: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-swift
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: swift
        image: gcr.io/jenkinsxio/builder-swift:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  terraform: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-terraform
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: terraform
        image: gcr.io/jenkinsxio/builder-terraform:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 600Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
  aws-cdk: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-aws-cdk
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080, 5005
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: aws-cdk
        image: gcr.io/jenkinsxio/builder-maven-nodejs:0.1.398
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: *************
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: *************
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx512m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
---
# Source: jenkins-x-platform/charts/chartmuseum/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-chartmuseum
  labels:
    app: release-name-chartmuseum
    release: "release-name"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"

---
# Source: jenkins-x-platform/charts/docker-registry/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-docker-registry
  labels:
    app: release-name-docker-registry
    chart: "docker-registry-1.5.0"
    release: "release-name"
    heritage: "Tiller"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "100Gi"
---
# Source: jenkins-x-platform/charts/jenkins/templates/home-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins
  labels:
    app: jenkins
    chart: "jenkins-0.10.32"
    release: "release-name"
    heritage: "Tiller"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "30Gi"

---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/pvc-standalone.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app: mongodb
    chart: mongodb-4.0.4
    heritage: Tiller
    release: release-name
  name: release-name-mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: jenkins-x-platform/charts/nexus/templates/pvc.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-nexus
  labels:
    app: nexus
    chart: "nexus-0.1.7"
    release: "release-name"
    heritage: "Tiller"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: jenkins-x-platform/charts/cleanup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: cleanup
    chart: "cleanup-2.3.89"
    release: "release-name"
    heritage: "Tiller"
  name: cleanup
---
# Source: jenkins-x-platform/charts/controllercommitstatus/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-controllercommitstatus
  labels:
    app: controllercommitstatus
    chart: controllercommitstatus-1.3.1098
    release: release-name
    heritage: Tiller
---
# Source: jenkins-x-platform/charts/controllerrole/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-controllerrole
  labels:
    app: controllerrole
    chart: controllerrole-1.3.1098
    release: release-name
    heritage: Tiller
---
# Source: jenkins-x-platform/charts/controllerteam/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-controllerteam
  labels:
    app: controllerteam
    chart: controllerteam-1.3.1098
    release: release-name
    heritage: Tiller
---
# Source: jenkins-x-platform/charts/controllerworkflow/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-controllerworkflow
  labels:
    app: controllerworkflow
    chart: controllerworkflow-1.3.1098
    release: release-name
    heritage: Tiller
---
# Source: jenkins-x-platform/charts/expose/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: expose
    chart: "expose-2.3.89"
    release: "release-name"
    heritage: "Tiller"
  name: expose
---
# Source: jenkins-x-platform/charts/gcactivities/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcactivities
  labels:
    app: gcactivities
    chart: gcactivities-1.3.1098
    release: release-name
    heritage: Tiller
---
# Source: jenkins-x-platform/charts/gcpods/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcpods
  labels:
    app: gcpods
    chart: gcpods-1.3.1098
    release: release-name
    heritage: Tiller
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcpreviews
  labels:
    app: gcpreviews
    chart: gcpreviews-1.3.1098
    release: release-name
    heritage: Tiller
---
# Source: jenkins-x-platform/charts/heapster/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: heapster
    chart: heapster-0.3.2
    heritage: Tiller
    release: release-name
  name: release-name-heapster
---
# Source: jenkins-x-platform/charts/jenkins/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  labels:
    app: jenkins
    chart: "jenkins-0.10.32"
    release: "release-name"
    heritage: "Tiller"

---
# Source: jenkins-x-platform/charts/controllercommitstatus/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: controllercommitstatus-**
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - create
  - update
  - list


---
# Source: jenkins-x-platform/charts/controllerrole/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: controllerrole-**
rules:
- apiGroups:
  - ""
  - extensions
  - apps
  - rbac.authorization.k8s.io
  - batch
  - jenkins.io
  resources:
  - '*'
  - pods/*
  verbs:
  - list
  - get
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - create
  - update
  - list


---
# Source: jenkins-x-platform/charts/controllerteam/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: controllerteam-**
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - watch
  - list
  - create
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - create
  - update
  - list
- apiGroups:
  - jenkins.io
  resources:
  - teams
  - users
  verbs:
  - list
  - get
  - watch
  - update
- apiGroups:
  - jenkins.io
  resources:
  - users
  verbs:
  - list
  - get
  - watch


---
# Source: jenkins-x-platform/charts/controllerworkflow/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: controllerworkflow-**
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - create
  - update
  - list


---
# Source: jenkins-x-platform/charts/gcactivities/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gcactivities-**
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - delete
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get


---
# Source: jenkins-x-platform/charts/gcpreviews/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gcpreviews-**
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/portforward
  verbs:
  - get
  - delete
  - list
  - create


---
# Source: jenkins-x-platform/charts/controllercommitstatus/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: controllercommitstatus-**
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: controllercommitstatus-**
subjects:
- kind: ServiceAccount
  name: release-name-controllercommitstatus
  namespace: **
---
# Source: jenkins-x-platform/charts/controllerrole/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: controllerrole-**
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: controllerrole-**
subjects:
- kind: ServiceAccount
  name: release-name-controllerrole
  namespace: **
---
# Source: jenkins-x-platform/charts/controllerteam/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: controllerteam-**
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: controllerteam-**
subjects:
- kind: ServiceAccount
  name: release-name-controllerteam
  namespace: **
---
# Source: jenkins-x-platform/charts/controllerworkflow/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: controllerworkflow-**
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: controllerworkflow-**
subjects:
- kind: ServiceAccount
  name: release-name-controllerworkflow
  namespace: **
---
# Source: jenkins-x-platform/charts/gcactivities/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gcactivities-**
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gcactivities-**
subjects:
- kind: ServiceAccount
  name: release-name-gcactivities
  namespace: **
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gcpreviews-**
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gcpreviews-**
subjects:
- kind: ServiceAccount
  name: release-name-gcpreviews
  namespace: **
---
# Source: jenkins-x-platform/charts/heapster/templates/heapster-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: heapster
    chart: heapster-0.3.2
    heritage: Tiller
    release: release-name
  name: release-name-heapster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:heapster
subjects:
  - kind: ServiceAccount
    name: release-name-heapster
    namespace: **
---
# Source: jenkins-x-platform/charts/jenkins/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: jenkins-**-role-binding
  labels:
    app: jenkins
    chart: "jenkins-0.10.32"
    release: "release-name"
    heritage: "Tiller"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-*****
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: **

---
# Source: jenkins-x-platform/templates/controller-team-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-x-team-controller
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-*****
subjects:
- kind: ServiceAccount
  name: jenkins-x-controllerteam
  namespace: **
---
# Source: jenkins-x-platform/charts/cleanup/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cleanup
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - ""
  - "route.openshift.io"
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete

---
# Source: jenkins-x-platform/charts/controllercommitstatus/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: controllercommitstatus
rules:
- apiGroups:
  - jenkins.io
  resources:
  - commitstatuses
  verbs:
  - get
  - create
  - update
  - watch
  - list
- apiGroups:
  - jenkins.io
  resources:
  - environments
  - plugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - jenkins.io
  resources:
  - pipelineactivities
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  - configmaps
  verbs:
  - watch
  - list
  - get


---
# Source: jenkins-x-platform/charts/controllerrole/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: controllerrole
rules:
- apiGroups:
  - jenkins.io
  resources:
  - environmentrolebindings
  verbs:
  - list
  - get
  - watch
  - create
  - update


---
# Source: jenkins-x-platform/charts/controllerteam/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: controllerteam
rules:
- apiGroups:
  - jenkins.io
  resources:
  - teams
  - users
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - list
  - get
  - watch
  - create
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - persistentvolumeclaims
  - secrets
  - serviceaccounts
  - services
  verbs:
  - list
  - watch
  - get
  - create
  - update
  - delete
- apiGroups:
  - extensions/v1beta1
  resources:
  - deployments
  verbs:
  - list
  - watch
  - get
  - create
  - update
  - delete
- apiGroups:
  - rbac.authorization.k8s.io/v1
  resources:
  - roles
  - rolebindings
  verbs:
  - list
  - watch
  - get


---
# Source: jenkins-x-platform/charts/controllerworkflow/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: controllerworkflow
rules:
- apiGroups:
  - jenkins.io
  resources:
  - pipelineactivities
  verbs:
  - list
  - get
  - watch
  - create
  - update
- apiGroups:
  - jenkins.io
  resources:
  - workflows
  - environments
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs:
  - list
  - get


---
# Source: jenkins-x-platform/charts/expose/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: expose
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - ""
  - "route.openshift.io"
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete

---
# Source: jenkins-x-platform/charts/gcactivities/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcactivities
rules:
- apiGroups:
  - jenkins.io
  resources:
  - pipelineactivities
  verbs:
  - list
  - delete
- apiGroups:
  - jenkins.io
  resources:
  - environments
  - plugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - services
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get


---
# Source: jenkins-x-platform/charts/gcpods/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcpods
rules:
- apiGroups:
  - jenkins.io
  resources:
  - environments
  - plugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - delete
  - list


---
# Source: jenkins-x-platform/charts/gcpreviews/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcpreviews
rules:
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - list
  - get
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - get
  - watch


---
# Source: jenkins-x-platform/charts/heapster/templates/pod-nanny-role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: release-name-heapster-pod-nanny
  labels:
    app: heapster
    chart: heapster-0.3.2
    heritage: Tiller
    release: release-name
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - "extensions"
  resources:
  - deployments
  verbs:
  - get
  - update
---
# Source: jenkins-x-platform/templates/committer-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: committer
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
    title: "Committer"
    description: "A committer can write to project resources but cannot add/remove users"
rules:
  - apiGroups:
    - jenkins.io
    - rbac.authorization.k8s.io
    resources:
    - "*"
    verbs:
    - list
    - get
    - watch
  - apiGroups:
    - ""
    - extensions
    - apps
    - batch
    resources:
    - "*"
    - "pods/*"
    verbs:
    - list
    - get
    - watch
    - create
    - update
    - patch
    - delete

---
# Source: jenkins-x-platform/templates/**-view-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: **-view
rules:
- apiGroups:
  - jenkins.io
  resources:
  - teams
  verbs:
  - list
  - get
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - list
  - get
- apiGroups:
  - prow.k8s.io
  resources:
  - prowjobs
  verbs:
  - create
---
# Source: jenkins-x-platform/templates/owner-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: owner
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
     title: "Team Owner"
     description: "A team owner can add/remove users and has write access to all team resources"
rules:
  - apiGroups:
    - ""
    - extensions
    - apps
    - rbac.authorization.k8s.io
    - batch
    - jenkins.io
    resources:
    - "*"
    - "pods/*"
    verbs:
    - list
    - get
    - watch
    - create
    - update
    - patch
    - delete

---
# Source: jenkins-x-platform/templates/viewer-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: viewer
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
     title: "Viewer"
     description: "A viewer can view all project resources"
rules:
  - apiGroups:
    - ""
    - jenkins.io
    - extensions
    - apps
    - rbac.authorization.k8s.io
    - batch
    resources:
    - "*"
    verbs:
    - list
    - get
    - watch

---
# Source: jenkins-x-platform/charts/cleanup/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cleanup
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cleanup
subjects:
- kind: ServiceAccount
  name: cleanup
  namespace: **
---
# Source: jenkins-x-platform/charts/controllercommitstatus/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: controllercommitstatus
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: controllercommitstatus
subjects:
- kind: ServiceAccount
  name: release-name-controllercommitstatus
  namespace: **
---
# Source: jenkins-x-platform/charts/controllerrole/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: controllerrole
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: controllerrole
subjects:
- kind: ServiceAccount
  name: release-name-controllerrole
  namespace: **
---
# Source: jenkins-x-platform/charts/controllerteam/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: controllerteam
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: controllerteam
subjects:
- kind: ServiceAccount
  name: release-name-controllerteam
  namespace: **
---
# Source: jenkins-x-platform/charts/controllerworkflow/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: controllerworkflow
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: controllerworkflow
subjects:
- kind: ServiceAccount
  name: release-name-controllerworkflow
  namespace: **
---
# Source: jenkins-x-platform/charts/expose/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: expose
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: expose
subjects:
- kind: ServiceAccount
  name: expose
  namespace: **
---
# Source: jenkins-x-platform/charts/gcactivities/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcactivities
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcactivities
subjects:
- kind: ServiceAccount
  name: release-name-gcactivities
  namespace: **
---
# Source: jenkins-x-platform/charts/gcpods/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcpods
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcpods
subjects:
- kind: ServiceAccount
  name: release-name-gcpods
  namespace: **
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcpreviews
  namespace: **
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcpreviews
subjects:
- kind: ServiceAccount
  name: release-name-gcpreviews
  namespace: **
---
# Source: jenkins-x-platform/charts/heapster/templates/pod-nanny-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: release-name-heapster-pod-nanny
  labels:
    app: heapster
    chart: heapster-0.3.2
    heritage: Tiller
    release: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-heapster-pod-nanny
subjects:
- kind: ServiceAccount
  name: release-name-heapster
  namespace: **
---
# Source: jenkins-x-platform/charts/chartmuseum/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-chartmuseum
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: 'kubernetes.io/ingress.class: nginx'
    
  labels:
    app: chartmuseum
    chart: chartmuseum-1.1.4
    heritage: "Tiller"
    release: "release-name"
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: 'kubernetes.io/ingress.class: nginx'
    
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: chartmuseum
    release: "release-name"

---
# Source: jenkins-x-platform/charts/docker-registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-docker-registry
  labels:
    app: docker-registry
    chart: docker-registry-1.5.0
    release: release-name
    heritage: Tiller
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: |-
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 2g
    
spec:
  type: ClusterIP
  ports:
    - port: 5000
      protocol: TCP
      name: registry
      targetPort: 5000
  selector:
    app: docker-registry
    release: release-name

---
# Source: jenkins-x-platform/charts/heapster/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: heapster
  labels:
    chart: "heapster-0.3.2"
    app: release-name-heapster
    heritage: "Tiller"
    release: "release-name"
spec:
  type: ClusterIP
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
  selector:
    app: release-name-heapster

---
# Source: jenkins-x-platform/charts/jenkins/templates/jenkins-agent-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: jenkins-agent
  labels:
    app: jenkins
    chart: "jenkins-0.10.32"
    component: "release-name-jenkins-master"
spec:
  ports:
    - port: 50000
      targetPort: 50000
      name: slavelistener
  selector:
    component: "release-name-jenkins-master"
  type: ClusterIP

---
# Source: jenkins-x-platform/charts/jenkins/templates/jenkins-master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  labels:
    app: jenkins
    heritage: "Tiller"
    release: "release-name"
    chart: "jenkins-0.10.32"
    component: "release-name-jenkins-master"
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: |-
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 500m
    
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
      
  selector:
    component: "release-name-jenkins-master"
  type: ClusterIP
  

---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/svc-standalone.yaml

apiVersion: v1
kind: Service
metadata:
  name: release-name-mongodb
  labels:
    app: mongodb
    chart: mongodb-4.0.4
    release: "release-name"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
  selector:
    app: mongodb
    release: "release-name"

---
# Source: jenkins-x-platform/charts/monocular/templates/api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-monocular-api
  labels:
    chart: "monocular-0.6.4"
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: |-
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/ingress.class: nginx
    fabric8.io/ingress.name: monocular
    fabric8.io/ingress.path: /api/
    
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8081
    protocol: TCP
    name: monocular-api
  selector:
    app: release-name-monocular-api

---
# Source: jenkins-x-platform/charts/monocular/templates/prerender-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-monocular-prerender
  labels:
    chart: "monocular-0.6.4"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: prerender
  selector:
    app: release-name-monocular-prerender

---
# Source: jenkins-x-platform/charts/monocular/templates/ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-monocular-ui
  labels:
    chart: "monocular-0.6.4"
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.name: monocular
    fabric8.io/ingress.path: /
    jenkins-x.io/skip.tls: "true"
    
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: monocular-ui
  selector:
    app: release-name-monocular-ui

---
# Source: jenkins-x-platform/charts/nexus/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nexus
  labels:
    app: nexus
    chart: nexus-0.1.7
    release: release-name
    heritage: Tiller
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: 'kubernetes.io/ingress.class: nginx'
    
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8081
      protocol: TCP
      name: nexus
  selector:
    app: nexus
    release: release-name
---
# Source: jenkins-x-platform/charts/jenkins/templates/jenkins-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-ui-test-e7wnt"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: "dduportal/bats:0.4.0"
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: release-name-ui-test
      image: jenkinsxio/jenkinsx:0.0.53
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: jenkins-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never

---
# Source: jenkins-x-platform/charts/chartmuseum/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-chartmuseum
  annotations:
    {}
    
  labels:
    app: chartmuseum
    chart: chartmuseum-1.1.4
    heritage: "Tiller"
    release: "release-name"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
    
  revisionHistoryLimit: 10
  template:
    metadata:
      name: release-name-chartmuseum
      annotations:
        {}
        
      labels:
        app: chartmuseum
        release: "release-name"
    spec:
      containers:
      - name: chartmuseum
        image: chartmuseum/chartmuseum:v0.7.1
        imagePullPolicy: IfNotPresent
        env:
        - name: "AUTH_ANONYMOUS_GET"
          value: "true"
        - name: "CHART_POST_FORM_FIELD_NAME"
          value: "chart"
        - name: "DISABLE_METRICS"
          value: "true"
        - name: "LOG_JSON"
          value: "true"
        - name: "PROV_POST_FORM_FIELD_NAME"
          value: "prov"
        - name: "STORAGE"
          value: "local"
        - name: "BASIC_AUTH_PASS"
          valueFrom:
            secretKeyRef:
              name: release-name-chartmuseum
              key: "BASIC_AUTH_PASS"
        - name: "BASIC_AUTH_USER"
          valueFrom:
            secretKeyRef:
              name: release-name-chartmuseum
              key: "BASIC_AUTH_USER"
        args:
        - --port=8080
        - --storage-local-rootdir=/storage
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          
        readinessProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          
        volumeMounts:
        - mountPath: /storage
          name: storage-volume
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 160m
            memory: 128Mi
          
      volumes:
      - name: storage-volume
        persistentVolumeClaim:
          claimName: release-name-chartmuseum

---
# Source: jenkins-x-platform/charts/controllercommitstatus/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-controllercommitstatus
  labels:
    app: controllercommitstatus
    chart: controllercommitstatus-1.3.1098
    release: release-name
    heritage: Tiller
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  selector:
    matchLabels:
      app: controllercommitstatus
      release: release-name
  template:
    metadata:
      labels:
        app: controllercommitstatus
        release: release-name
    spec:
      restartPolicy: Always
      serviceAccountName: release-name-controllercommitstatus
      containers:
        - name: controllercommitstatus
          command: [**]
          args:
          - controller
          - commitstatus
          - --verbose
          
          imagePullPolicy: IfNotPresent
          image: "jenkinsxio/**:1.3.1098"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
          - name: cheese
            value: wine
          - name: foo
            value: bar
          resources:
            {}
            
---
# Source: jenkins-x-platform/charts/controllerrole/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-controllerrole
  labels:
    app: controllerrole
    chart: controllerrole-1.3.1098
    release: release-name
    heritage: Tiller
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  selector:
    matchLabels:
      app: controllerrole
      release: release-name
  template:
    metadata:
      labels:
        app: controllerrole
        release: release-name
    spec:
      restartPolicy: Always
      serviceAccountName: release-name-controllerrole
      containers:
        - name: controllerrole
          command: [**]
          args:
          - controller
          - role
          
          imagePullPolicy: IfNotPresent
          image: "jenkinsxio/**:1.3.1098"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
          - name: cheese
            value: wine
          - name: foo
            value: bar
          resources:
            {}
            
---
# Source: jenkins-x-platform/charts/controllerteam/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-controllerteam
  labels:
    app: controllerteam
    chart: controllerteam-1.3.1098
    release: release-name
    heritage: Tiller
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  selector:
    matchLabels:
      app: controllerteam
      release: release-name
  template:
    metadata:
      labels:
        app: controllerteam
        release: release-name
    spec:
      restartPolicy: Always
      serviceAccountName: release-name-controllerteam
      containers:
        - name: controllerteam
          command: [**]
          args:
          - controller
          - team
          
          imagePullPolicy: IfNotPresent
          image: "gcr.io/jenkinsxio/builder-go:0.1.398"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
          - name: GIT_AUTHOR_EMAIL
            value: jenkins-x@googlegroups.com
          - name: GIT_AUTHOR_NAME
            value: *************
          - name: XDG_CONFIG_HOME
            value: /home/jenkins
          - name: cheese
            value: wine
          - name: foo
            value: bar
          resources:
            {}
            
---
# Source: jenkins-x-platform/charts/controllerworkflow/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-controllerworkflow
  labels:
    app: controllerworkflow
    chart: controllerworkflow-1.3.1098
    release: release-name
    heritage: Tiller
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  selector:
    matchLabels:
      app: controllerworkflow
      release: release-name
  template:
    metadata:
      labels:
        app: controllerworkflow
        release: release-name
    spec:
      restartPolicy: Always
      serviceAccountName: release-name-controllerworkflow
      containers:
        - name: controllerworkflow
          command: [**]
          args:
          - controller
          - workflow
          
          imagePullPolicy: IfNotPresent
          image: "jenkinsxio/**:1.3.1098"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
          - name: cheese
            value: wine
          - name: foo
            value: bar
          resources:
            {}
            
---
# Source: jenkins-x-platform/charts/docker-registry/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-docker-registry
  labels:
    app: docker-registry
    chart: docker-registry-1.5.0
    release: release-name
    heritage: Tiller
spec:
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
        release: release-name
      annotations:
        checksum/config: bf5d08728bcdb21c3763ecf7db12d7c0c22b5690a51664b7e2745c7d44fbf042
    spec:
      containers:
        - name: docker-registry
          image: "registry:2.6.2"
          imagePullPolicy: IfNotPresent
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          resources:
            {}
            
          env:
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-docker-registry-secret
                  key: haSharedSecret
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry/
            - name: "release-name-docker-registry-config"
              mountPath: "/etc/docker/registry"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-docker-registry
        - name: release-name-docker-registry-config
          configMap:
            name: release-name-docker-registry-config

---
# Source: jenkins-x-platform/charts/heapster/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-heapster
  annotations:
    {}
    
  labels:
    chart: "heapster-0.3.2"
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        {}
        
      labels:
        app: release-name-heapster
    spec:
      serviceAccountName: release-name-heapster
      containers:
      - name: heapster
        image: "k8s.gcr.io/heapster:v1.5.2"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8082
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8082
          initialDelaySeconds: 180
          timeoutSeconds: 5
        resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
            
        command:
          - "/heapster"
          - "--source=kubernetes.summary_api:''"

      - name: heapster-nanny
        
        image: "k8s.gcr.io/addon-resizer:1.7"
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 50m
              memory: 90Mi
            requests:
              cpu: 50m
              memory: 90Mi
            
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        command:
          - "/pod_nanny"
          - "--deployment=release-name-heapster"
          - "--container=heapster"
          - "--cpu=150m"
          - "--extra-cpu=10m"
          - "--memory=200Mi"
          - "--extra-memory=6Mi"
          - "--threshold=5"
          - "--poll-period=300000"
---
# Source: jenkins-x-platform/charts/jenkins/templates/jenkins-master-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins
  labels:
    heritage: "Tiller"
    release: "release-name"
    chart: "jenkins-0.10.32"
    component: "release-name-jenkins-master"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "release-name-jenkins-master"
  template:
    metadata:
      labels:
        app: jenkins
        heritage: "Tiller"
        release: "release-name"
        chart: "jenkins-0.10.32"
        component: "release-name-jenkins-master"
      annotations:
        checksum/config: ef396307b7a7072ecce52713bf52592c9400a0ba1b85ae3e39622e539195c5ef
    spec:
      securityContext:
        runAsUser: 0
      serviceAccountName: jenkins
      initContainers:
        - name: "copy-default-config"
          image: "jenkinsxio/jenkinsx:0.0.53"
          imagePullPolicy: "IfNotPresent"
          command: [ "sh", "/var/jenkins_config/apply_config.sh" ]
          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
            -
              mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
      containers:
        - name: jenkins
          image: "jenkinsxio/jenkinsx:0.0.53"
          imagePullPolicy: "IfNotPresent"
          args: [ "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",  "--argumentsRealm.roles.$(ADMIN_USER)=*****"]
          readinessProbe:
            timeoutSeconds: 5
            initialDelaySeconds: 10
            httpGet:
              path: "/login"
              port: 8080
          livenessProbe:
            timeoutSeconds: 5
            initialDelaySeconds: 60
            failureThreshold: 10
            httpGet:
              path: "/login"
              port: 8080
          env:
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  name: jenkins-x-docker-registry
                  key: docker.registry
            - name: JAVA_OPTS
              value: "-Dhudson.slaves.NodeProvisioner.initialDelay=0 -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85 -Djenkins.displayurl.provider=org.jenkinsci.plugins.blueoceandisplayurl.BlueOceanDisplayURLImpl
"
            - name: JENKINS_OPTS
              value: ""
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jenkins
                  key: jenkins-*****-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: jenkins
                  key: jenkins-*****-user
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 50000
              name: slavelistener
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
            -
              mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
              readOnly: false
      volumes:
      - name: jenkins-config
        configMap:
          name: jenkins
      - name: plugin-dir
        emptyDir: {}
      - name: secrets-dir
        emptyDir: {}
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins
---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/deployment-standalone.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-mongodb
  labels:
    app: mongodb
    chart: mongodb-4.0.4
    release: "release-name"
    heritage: "Tiller"
spec:
  template:
    metadata:
      labels:
        app: mongodb
        release: "release-name"
        chart: mongodb-4.0.4
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
      - name: release-name-mongodb
        image: docker.io/bitnami/mongodb:3.6.6-debian-9
        imagePullPolicy: "Always"
        env:
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-mongodb
              key: mongodb-root-password
        - name: MONGODB_USERNAME
          value: ""
        - name: MONGODB_DATABASE
          value: "monocular"
        - name: MONGODB_EXTRA_FLAGS
          value: 
        ports:
        - name: mongodb
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.*****Command('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.*****Command('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
        resources:
          {}
          
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: release-name-mongodb
---
# Source: jenkins-x-platform/charts/monocular/templates/api-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-monocular-api
  labels:
    chart: "monocular-0.6.4"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: release-name-monocular-api
      annotations:
        checksum/config: f4edbc23c8c3cd1a2747df13cfc8b35f534ce550200842580568566fa768c1ad
    spec:
      containers:
      - name: monocular
        image: "bitnami/monocular-api:v0.7.3"
        imagePullPolicy: Always
        env:
        - name: MONOCULAR_HOME
          value: /monocular
        ports:
        - containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 360
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 30
          timeoutSeconds: 5
        volumeMounts:
          - name: cache
            mountPath: /monocular
          - name: config
            mountPath: /monocular/config
        resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
            
      volumes:
      - name: config
        configMap:
          name: release-name-monocular-api-config
      - name: cache
        emptyDir: {}

---
# Source: jenkins-x-platform/charts/monocular/templates/prerender-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-monocular-prerender
  labels:
    chart: "monocular-0.6.4"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: release-name-monocular-prerender
    spec:
      containers:
      - name: monocular
        image: "migmartri/prerender:latest"
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
          - name: IN_MEMORY_CACHE
            value: "true"
        resources:
            requests:
              cpu: 100m
              memory: 128Mi
            

---
# Source: jenkins-x-platform/charts/monocular/templates/ui-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-monocular-ui
  labels:
    chart: "monocular-0.6.4"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: release-name-monocular-ui
      annotations:
        checksum/config: 20d42c95615d17e8d27ae06e63cee733b39917feebcd2a935a5302c06965930d
    spec:
      containers:
      - name: monocular
        image: "bitnami/monocular-ui:v0.7.3"
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
        volumeMounts:
          - name: vhost
            mountPath: /bitnami/nginx/conf/vhosts
          - name: config
            mountPath: /app/assets/js
        resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
            
      volumes:
      - name: vhost
        configMap:
          name: release-name-monocular-ui-vhost
      - name: config
        configMap:
          name: release-name-monocular-ui-config

---
# Source: jenkins-x-platform/charts/nexus/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-nexus
  labels:
    app: nexus
    chart: nexus-0.1.7
    release: release-name
    heritage: Tiller
  annotations:
    configmap.fabric8.io/update-on-change: nexus
spec:
  selector:
    matchLabels:
      app: nexus
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: nexus
        release: release-name
    spec:
      containers:
      - name: nexus
        image: "gcr.io/jenkinsxio/nexus:0.1.7"
        imagePullPolicy: IfNotPresent
        env:
        - name: NEXUS_CONTEXT
          valueFrom:
            configMapKeyRef:
              name: nexus
              key: context.path
        - name: ENABLE_ANONYMOUS_ACCESS
          value: "false"
        lifecycle:
          postStart:
            exec:
              command:
              - /opt/sonatype/nexus/postStart.sh
        ports:
          - containerPort: 8081
        livenessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 30
          failureThreshold: 6
        resources:
            null
            
        volumeMounts:
          - mountPath: /nexus-data
            name: nexus-data-volume
          - mountPath: /opt/sonatype/nexus/config
            name: nexus

      volumes:
        - name: nexus
          secret:
            secretName: nexus
        - name: nexus-data-volume
          persistentVolumeClaim:
            claimName: release-name-nexus
      securityContext:
        fsGroup: 2000
        
---
# Source: jenkins-x-platform/charts/cleanup/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup
  labels:
    heritage: "Tiller"
    release: "release-name"
    chart: "cleanup-2.3.89"
    component: "release-name-cleanup"
  name: cleanup
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
    
spec:
  # backoffLimit: 5
  template:
    metadata:
      name: "release-name"
      # istio-proxy prevents job pods from completing if istio is enabled
      # https://github.com/istio/istio/issues/6324
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        heritage: "Tiller"
        release: "release-name"
        chart: "cleanup-2.3.89"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "jenkinsxio/exposecontroller:2.3.89"
        name: cleanup
        command: ["/exposecontroller"]
        args:
        - "--cleanup"
      serviceAccountName: cleanup
      restartPolicy: Never
---
# Source: jenkins-x-platform/charts/expose/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: expose
  labels:
    heritage: "Tiller"
    release: "release-name"
    chart: "expose-2.3.89"
    component: "release-name-expose"
  name: expose
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    
spec:
  # backoffLimit: 5
  template:
    metadata:
      name: "release-name"
      # istio-proxy prevents job pods from completing if istio is enabled
      # https://github.com/istio/istio/issues/6324
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        heritage: "Tiller"
        release: "release-name"
        chart: "expose-2.3.89"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "jenkinsxio/exposecontroller:2.3.89"
        name: expose
        command: ["/exposecontroller"]
        args:
      serviceAccountName: expose
      restartPolicy: Never
---
# Source: jenkins-x-platform/charts/gcactivities/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcactivities
  labels:
    app: gcactivities
    chart: gcactivities-1.3.1098
    release: release-name
    heritage: Tiller
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0/30 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcactivities
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcactivities
          containers:
            - name: gcactivities
              command: [**]
              args:
              - gc
              - activities
              - --batch-mode
              
              imagePullPolicy: IfNotPresent
              image: "jenkinsxio/**:1.3.1098"
              env:
              - name: cheese
                value: wine
              - name: foo
                value: bar
              resources:
                {}
            
---
# Source: jenkins-x-platform/charts/gcpods/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcpods
  labels:
    app: gcpods
    chart: gcpods-1.3.1098
    release: release-name
    heritage: Tiller
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0/30 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcpods
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcpods
          containers:
            - name: gcpods
              command: [**]
              args:
              - gc
              - pods
              - --batch-mode
              
              imagePullPolicy: IfNotPresent
              image: "jenkinsxio/**:1.3.1098"
              env:
              - name: cheese
                value: wine
              - name: foo
                value: bar
              resources:
                {}
            
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcpreviews
  labels:
    app: gcpreviews
    chart: gcpreviews-1.3.1098
    release: release-name
    heritage: Tiller
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcpreviews
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcpreviews
          containers:
            - name: gcpreviews
              command: [**]
              args:
              - gc
              - previews
              - --batch-mode
              
              imagePullPolicy: IfNotPresent
              image: "gcr.io/jenkinsxio/builder-go:0.1.398"
              env:
              - name: cheese
                value: wine
              - name: foo
                value: bar
              resources:
                {}
            
---
# Source: jenkins-x-platform/templates/buildpacks.yaml

apiVersion: v1
kind: List
items:
- apiVersion: jenkins.io/v1
  kind: BuildPack
  metadata:
    name: "classic-workloads"
  spec:
    label: "Library Workloads: CI+Release but no CD"
    gitUrl: "https://github.com/jenkins-x-buildpacks/jenkins-x-classic.git"
    gitRef: "master"
- apiVersion: jenkins.io/v1
  kind: BuildPack
  metadata:
    name: "kubernetes-workloads"
  spec:
    label: "Kubernetes Workloads: Automated CI+CD with GitOps Promotion"
    gitUrl: "https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes.git"
    gitRef: "master"

---
# Source: jenkins-x-platform/charts/chartmuseum/templates/ingress.yaml

---
# Source: jenkins-x-platform/charts/chartmuseum/templates/serviceaccount.yaml

---
# Source: jenkins-x-platform/charts/cleanup/templates/configmap.yaml

---
# Source: jenkins-x-platform/charts/controllercommitstatus/templates/cronjob.yaml

---
# Source: jenkins-x-platform/charts/controllercommitstatus/templates/daemonset.yaml

---
# Source: jenkins-x-platform/charts/controllercommitstatus/templates/job.yaml

---
# Source: jenkins-x-platform/charts/controllercommitstatus/templates/service.yaml

---
# Source: jenkins-x-platform/charts/controllerrole/templates/cronjob.yaml

---
# Source: jenkins-x-platform/charts/controllerrole/templates/daemonset.yaml

---
# Source: jenkins-x-platform/charts/controllerrole/templates/job.yaml

---
# Source: jenkins-x-platform/charts/controllerrole/templates/service.yaml

---
# Source: jenkins-x-platform/charts/controllerteam/templates/cronjob.yaml

---
# Source: jenkins-x-platform/charts/controllerteam/templates/daemonset.yaml

---
# Source: jenkins-x-platform/charts/controllerteam/templates/job.yaml

---
# Source: jenkins-x-platform/charts/controllerteam/templates/service.yaml

---
# Source: jenkins-x-platform/charts/controllerworkflow/templates/cronjob.yaml

---
# Source: jenkins-x-platform/charts/controllerworkflow/templates/daemonset.yaml

---
# Source: jenkins-x-platform/charts/controllerworkflow/templates/job.yaml

---
# Source: jenkins-x-platform/charts/controllerworkflow/templates/service.yaml

---
# Source: jenkins-x-platform/charts/docker-registry/templates/ingress.yaml

---
# Source: jenkins-x-platform/charts/expose/templates/configmap.yaml

---
# Source: jenkins-x-platform/charts/gcactivities/templates/daemonset.yaml

---
# Source: jenkins-x-platform/charts/gcactivities/templates/deployment.yaml

---
# Source: jenkins-x-platform/charts/gcactivities/templates/job.yaml

---
# Source: jenkins-x-platform/charts/gcactivities/templates/service.yaml

---
# Source: jenkins-x-platform/charts/gcpods/templates/clusterrole.yaml


---
# Source: jenkins-x-platform/charts/gcpods/templates/clusterrolebinding.yaml

---
# Source: jenkins-x-platform/charts/gcpods/templates/daemonset.yaml

---
# Source: jenkins-x-platform/charts/gcpods/templates/deployment.yaml

---
# Source: jenkins-x-platform/charts/gcpods/templates/job.yaml

---
# Source: jenkins-x-platform/charts/gcpods/templates/service.yaml

---
# Source: jenkins-x-platform/charts/gcpreviews/templates/daemonset.yaml

---
# Source: jenkins-x-platform/charts/gcpreviews/templates/deployment.yaml

---
# Source: jenkins-x-platform/charts/gcpreviews/templates/job.yaml

---
# Source: jenkins-x-platform/charts/gcpreviews/templates/service.yaml

---
# Source: jenkins-x-platform/charts/jenkins/templates/jenkins-master-ingress.yaml


---
# Source: jenkins-x-platform/charts/jenkins/templates/jenkins-master-networkpolicy.yaml


---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/configmap.yaml

---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/headless-svc-rs.yaml

---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/poddisruptionbudget-arbiter-rs.yaml

---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/poddisruptionbudget-primary-rs.yaml

---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/poddisruptionbudget-secondary-rs.yaml


---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/statefulset-arbiter-rs.yaml


---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/statefulset-primary-rs.yaml


---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/statefulset-secondary-rs.yaml


---
# Source: jenkins-x-platform/charts/monocular/charts/mongodb/templates/svc-primary-rs.yaml


---
# Source: jenkins-x-platform/charts/monocular/templates/ingress.yaml

---
# Source: jenkins-x-platform/templates/chartmuseum-link-secret.yaml

---
# Source: jenkins-x-platform/templates/chartmuseum-link-service.yaml

---
# Source: jenkins-x-platform/templates/core-gke-secret.yaml

---
# Source: jenkins-x-platform/templates/gcs-jenkinsx-chartmuseum-secret.yaml


---
# Source: jenkins-x-platform/templates/jenkins-x-gke-sa.yaml

---
# Source: jenkins-x-platform/templates/kaniko-secret.yaml


---
# Source: jenkins-x-platform/templates/nexus-link-service.yaml

---
# Source: jenkins-x-platform/templates/test-jenkins-user-secret.yaml

Step: build-step-step4:

gcr.io/jenkinsxio/builder-maven-nodejs:0.1.398
gcr.io/jenkinsxio/builder-maven:0.1.398
gcr.io/jenkinsxio/builder-maven-java11:0.1.398
gcr.io/jenkinsxio/builder-gradle:0.1.398
gcr.io/jenkinsxio/builder-scala:0.1.398
gcr.io/jenkinsxio/builder-go:0.1.398
gcr.io/jenkinsxio/builder-terraform:0.1.398
gcr.io/jenkinsxio/builder-rust:0.1.398
gcr.io/jenkinsxio/builder-newman:0.1.398
gcr.io/jenkinsxio/builder-nodejs:0.1.398
gcr.io/jenkinsxio/builder-maven-nodejs:0.1.398
gcr.io/jenkinsxio/builder-**:0.1.398
gcr.io/jenkinsxio/builder-**:0.1.398
gcr.io/jenkinsxio/builder-python2:0.1.398
gcr.io/jenkinsxio/builder-python:0.1.398
gcr.io/jenkinsxio/builder-python37:0.1.398
gcr.io/jenkinsxio/builder-ruby:0.1.398
gcr.io/jenkinsxio/builder-swift:0.1.398
gcr.io/jenkinsxio/builder-dlang:0.1.398
Step: build-step-source-mkdir-jenkins-x-jenkins-x-platform-pr-n872g:

{"level":"warn","ts":1554910069.5187085,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1554910069.5471663,"logger":"fallback-logger","caller":"bash/main.go:65","msg":"Successfully executed command \"mkdir -p /pvc/build-pr/workspace\""}
Step: build-step-source-copy-jenkins-x-jenkins-x-platform-pr-tsflw:

{"level":"warn","ts":1554910070.6252494,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1554910070.9294388,"logger":"fallback-logger","caller":"bash/main.go:65","msg":"Successfully executed command \"cp -r /workspace/source/. /pvc/build-pr/workspace\""}
